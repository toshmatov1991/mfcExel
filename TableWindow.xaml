<Window x:Class="exel_for_mfc.TableWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:exel_for_mfc"
        mc:Ignorable="d" Icon="Resources\logomfc.png" WindowStartupLocation="CenterScreen"
        Title="Главное окно" Height="700" Width="1300">
    <Grid Background="LightSkyBlue">
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <TextBlock Text=" Быстрый поиск"
                   FontStyle="Italic"
                   Grid.Column="5"
                   VerticalAlignment="Top"
                   FontSize="18"/>
        <TextBox FontStyle="Italic"
                 VerticalAlignment="Top"
                 VerticalContentAlignment="Center"
                 FontSize="14" 
                 Grid.Column="6"
                 x:Name="SearchTable"
                 KeyUp="GoSearchToTable"
                 Grid.ColumnSpan="2" Height="24"/>
        <DataGrid x:Name="dataGrid"
                  Grid.ColumnSpan="8"
                  Grid.RowSpan="12"
                  CanUserSortColumns="False"
                  CanUserDeleteRows="False"
                  AutoGenerateColumns="False"
                  CanUserAddRows="True"
                  CellEditEnding="dataGrid_CellEditEnding" 
                  Margin="0,44,0,52">
            <DataGrid.Resources>
                <Style TargetType="DataGridColumnHeader">
                    <Setter Property="ContentTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding}" Margin="10 5"/>
                                    <Button Background="AliceBlue" x:Name="btnFilter" Width="19">[X]</Button>
                                </StackPanel>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding IdReg, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" Header="№п/п"/>
                <DataGridTextColumn Binding="{Binding Family, UpdateSourceTrigger=PropertyChanged}" Header="Фамилия"/>
                <DataGridTextColumn Binding="{Binding Name, UpdateSourceTrigger=PropertyChanged}" Header="Имя"/>
                <DataGridTextColumn Binding="{Binding Lastname, UpdateSourceTrigger=PropertyChanged}" Header="Отчество"/>
                <DataGridTextColumn Binding="{Binding Snils, UpdateSourceTrigger=PropertyChanged}" Header="Снилс"/>
                <DataGridTemplateColumn CanUserSort="True" Header="Район" SortMemberPath="Area">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ComboBox ItemsSource="{Binding Path=AreaCombobox, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                      DisplayMemberPath="AreaName"
                                      SelectedIndex="{Binding Area, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" DropDownClosed="AreaComboEvent" MouseDoubleClick="AreaExeption" KeyDown="AreaKeyDown" KeyUp="AreaKeyUp"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Населенный пункт" CanUserSort="True" SortMemberPath="Local">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ComboBox ItemsSource="{Binding Path=LocalCombobox, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                      DisplayMemberPath="LocalName"
                                      SelectedIndex="{Binding Local, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" DropDownClosed="LocalComboEvent">
                            </ComboBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Binding="{Binding Adress, UpdateSourceTrigger=PropertyChanged}" Header="Адрес"/>
                <DataGridTemplateColumn Header="Льгота" CanUserSort="True" SortMemberPath="Lgota">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ComboBox ItemsSource="{Binding Path=PrivelCombobox, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                      DisplayMemberPath="PrivilegesName"
                                      SelectedIndex="{Binding Lgota, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" DropDownClosed="PrivilegesComboEvent">
                            </ComboBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Binding="{Binding Sernumb, UpdateSourceTrigger=PropertyChanged}" Header="Серия и № сертификата"/>
                <DataGridTemplateColumn Header="Дата выдачи" Width="120" CanUserSort="True" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding DateGetSert,
                                                 StringFormat=dd.MM.yyyy}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <DatePicker SelectedDate="{Binding DateGetSert, StringFormat=dd.MM.yyyy, UpdateSourceTrigger=PropertyChanged}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Тип решения" CanUserSort="True" SortMemberPath="Solution">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ComboBox ItemsSource="{Binding Path=SolCombobox, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                      DisplayMemberPath="SolutionName"
                                      SelectedIndex="{Binding Solution, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" DropDownClosed="SolutionComboEvent">
                            </ComboBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Binding="{Binding DateAndNumbSolutionSert, UpdateSourceTrigger=PropertyChanged}" Header="Дата и номер решения"/>
                <DataGridTemplateColumn Header="Размер выплаты" CanUserSort="True" SortMemberPath="Pay">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ComboBox ItemsSource="{Binding Path=PayCombobox, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                      DisplayMemberPath="Pay"
                                      SelectedIndex="{Binding Pay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" DropDownClosed="PayComboEvent">
                            </ComboBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Binding="{Binding Trek, UpdateSourceTrigger=PropertyChanged}" Header="Трек"/>
                <DataGridTemplateColumn Header="Дата отправки почтой" CanUserSort="True">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding MailingDate,
                                                 StringFormat=dd.MM.yyyy}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <DatePicker SelectedDate="{Binding MailingDate, UpdateSourceTrigger=PropertyChanged}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Binding="{Binding Comment, UpdateSourceTrigger=PropertyChanged}" Header="" Visibility="Hidden"/>
            </DataGrid.Columns>

            <!-- Отображение комментария при выделении строки -->
            <DataGrid.RowDetailsTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal" Height="20" VerticalAlignment="Center">
                        <TextBox Text="{Binding Path=Comment, UpdateSourceTrigger=PropertyChanged}"
                                 TextChanged="CommentUpdate" 
                                 Background="LightGreen"
                                 VerticalContentAlignment="Center"
                                 FontWeight="DemiBold"
                                 Width="300"
                                 FontSize="12"
                                 Foreground="Black"/>
                    </StackPanel>
                </DataTemplate>
            </DataGrid.RowDetailsTemplate>
        </DataGrid>
        <Button Content="Выгрузить в Excel"
                Grid.Column="6"
                Grid.RowSpan="2"
                Background="LightGreen"
                Grid.Row="11"
                Height="42"
                Width="107"
                Click="Button_Click"/>
        <Button Grid.Column="5" Background="Yellow" Content="Обновить таблицу" HorizontalAlignment="Left" Height="37" Grid.Row="11" VerticalAlignment="Bottom" RenderTransformOrigin="0.5,0.5" Click="Button_Click_1" Grid.ColumnSpan="2"/>
        <Button Grid.Column="5" Background="Yellow" Content="Обновить фильтры" HorizontalAlignment="Left" Height="37" Grid.Row="12" VerticalAlignment="Bottom" RenderTransformOrigin="0.5,0.5" Grid.ColumnSpan="2" Click="Button_Click_2"/>
        <!-- Фильтрация , это будет жестко)-->
        <!-- Главное чтоб листвиев 
        я мог создавать программно
        Чтоб он создавался в результате запроса -->



        <!-- Фильтрация -->


        


    </Grid>
</Window>